#!/bin/bash

# a wrapper around ecryptfs and a way to open a given wiki

# get just the dir name, this is best way I know right now
source "$(dirname "$0")"/ecrypt_utils

print_help() {
printf "
Usage:
sin [ -E OPTS | -e OPTS ] [-w NAME] [-n NAME] [NAME]
    | (-m NAME | -u NAME | --help)

Default:
if run without args sin will try and mount the ecryptfs if its not already
and open the user specified index file

Options:
    NAME                  to use a different ecryptfs name
    -w --wiki-file NAME   open a file by NAME in the main wiki dir
    -e --editor-opts      new options for the editor call,
    -E --add-editor-opts  append options to the editor call,

    -n --new-ecryptfs     make a new ecryptfs dir structure and config

    these are exclusive
    -u --unmount          unmount the SECRET file
    -m --mount            mount the SECRET file
    -h --help             print this help then quit

"
}

# user settings
ECRYPTFS_NAME='notebook'
WIKI_FILE_NAME='index'
EDITOR_OPT=('-u' "$HOME/.config/nvim/writing_init.vim")

# defaults
UPPER_DIR="$HOME/$ECRYPTFS_NAME"
LOWER_DIR="$HOME/.$ECRYPTFS_NAME"
UNMOUNT_FS=0
MOUNT_FS=0
USE_INDEX_FILE=0
NEW_ECRYPTFS=0

[[ -z "$1" ]] && USE_INDEX_FILE=1

open_diary_entry() {
    local diary_file
    diary_file="${UPPER_DIR}/diary/$(date +%F).wiki"

    if [[ ! -f "$diary_file" ]]; then
        printf "Today is %s\\n" "$(date '+%a %F')" > "$diary_file"
    fi

    "$EDITOR" "${EDITOR_OPT[@]}" "$diary_file"
}

# open a file in the wiki dir, $1 will be file name
open_wiki_file() {
    local local_in_file

    local_in_file="$UPPER_DIR/${1}.wiki"

    if [[ ! -e $local_in_file ]]; then
        printf 'no file named %s\n' "$local_in_file"
        return 0
    fi

    "$EDITOR" "${EDITOR_OPT[@]}" "$local_in_file"
}

# get cli args and set options accordingly
while [[ -n "$1" ]]; do
    case "$1" in
        -n|--new-ecryptfs)
            NEW_ECRYPTFS=1
            ;;
        -w|--wiki-file)
            shift
            WIKI_FILE_NAME="$1"
            ;;
        -e|--editor-opt)
            shift
            EDITOR_OPT=("$1")
            ;;
        -E|--add-editor-opt)
            shift
            EDITOR_OPT+=("$1")
            ;;
        -u|--unmount)
            UNMOUNT_FS=1
            ;;
        -m|--mount)
            MOUNT_FS=1
            ;;
        -h|--help)
            print_help
            exit 0
            ;;
        -*)  # anything not above
            printf "%bError:%b\\n   bad cli args -> %b%s%b \\n" \
                '\033[31m' '\033[0m' '\033[33m' "$@" '\033[0m'
            print_help
            exit 1
            ;;
        *)  # any word gets made in to the ECRYPTFS_NAME
            ECRYPTFS_NAME="$1"
            ;;
    esac
    # shift will remove $1 and move $2 down so the loop will finish
    shift
done

# make sure it exists
if ((NEW_ECRYPTFS)); then
    make_new_ecryptfs_file "$ECRYPTFS_NAME"

elif ! check_for_ecryptfs "$ECRYPTFS_NAME"; then
    printf 'no ecryptfs named %s\n' "$ECRYPTFS_NAME"
    exit

elif ! grep --quiet -r "${ECRYPTFS_NAME}.*ecryptfs" /proc/mounts; then
    mount_existing "$ECRYPTFS_NAME"

fi

if ((MOUNT_FS)); then
    mount_ecrypt_utils "$ECRYPTFS_NAME"

elif ((UNMOUNT_FS)); then
    unmount_ecrypt_utils "$ECRYPTFS_NAME"

elif ((USE_INDEX_FILE)); then
    open_wiki_file "$WIKI_FILE_NAME"

fi
