#!/bin/bash

# make a thing to insert the password into the keyring,
# and write entry's to the secure folder.

# this assumes that both files and names are encrypted
# with the same pass phrase

# shellcheck disable=1090
source "$(dirname "$(realpath "$0")")"/ecrypt_utils

# user settings
ecryptfs_name='secret'

# set defaults
UPPER_DIR="$HOME/$ecryptfs_name"
LOWER_DIR="$HOME/.$ecryptfs_name"
DAILY_FILE="$UPPER_DIR/daily"

EDITOR_OPT=('-u' "$HOME/.config/nvim/writing_init.vim")
USE_NOTES=0
USE_DAY_FILE=0
UNMOUNT_FS=0
MOUNT_FS=0

help_and_quit() {
cat << __EOF__
S[ecure] I[n] [&] N[otes]

sin [-tuh] [-n file_name] [-E editor_options]

Options:
    none              open the in file
    -h --help         print this help then quit
    -n --notes        open the notes dir
    -t --today        open todays file
    -E --editor-opts  append options to the editor call
    -u --unmount      unmount the SECRET file
    -m --mount        mount the SECRET file

__EOF__
exit "$1"
}

while [[ -n "$1" ]]; do
    case "$1" in
        -E|--editor-opt)
            shift
            EDITOR_OPT+=("$1")
            ;;
        -t|--today)
            USE_DAY_FILE=1
            ;;
        -n|--note)
            USE_NOTES=1
            ;;
        -u|--unmount)
            UNMOUNT_FS=1
            ;;
        -m|--mount)
            MOUNT_FS=1
            ;;
        -h|--help)
            help_and_quit 0
            ;;
        *)
            printf "%bError:%b\\n   bad cli args -> %b%s%b \\n" \
                "\\033[31m" "\\033[0m" "\\033[33m" "$@" "\\033[0m"
            help_and_quit 1
            ;;
    esac
    shift
done

open_day_file() {
    local date_file

    date_file="${DAILY_FILE}/$(date +%a_%F).txt"

    if [[ ! -f "$date_file" ]]; then
        printf "Today is %s\\n" "$(date '+%a %F')" > "$date_file"
    fi

    "$EDITOR" "${EDITOR_OPT[@]}" "$date_file"
}

open_in_file() {
    local local_in_file

    local_in_file="$UPPER_DIR/in.txt"

    if [[ ! -f "$local_in_file" ]]; then
        printf "* In File\\n\\n" > "$local_in_file"
    fi

    "$EDITOR" "${EDITOR_OPT[@]}" "$local_in_file"
}

open_notes() {
    "$EDITOR" "${EDITOR_OPT[@]}" "$UPPER_DIR/notes"
}

main() {
    if [[ ! -d "$LOWER_DIR" ]]; then
        make_new_ecryptfs_file "$ecryptfs_name" "$LOWER_DIR" "$UPPER_DIR"
    elif ! check_mounts_for_ecryptfs "$ecryptfs_name"; then
        update_keyring "$ecryptfs_name"
    fi

    if ((USE_DAY_FILE)); then
        open_day_file
    elif ((USE_NOTES)); then
        open_notes
    else
        open_in_file
    fi
}

if ((UNMOUNT_FS)); then
    # from encrypt_utils
    unmount_ecryptfs "$ecryptfs_name"
elif ((MOUNT_FS)); then
    mount_ecryptfs "$ecryptfs_name"
else
    main
fi
