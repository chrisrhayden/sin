#!/bin/bash

# make a thing to insert the password into the keyring,
# and write entry's to the secure folder.

# this assumes that both files and names are encrypted
# with the same pass phrase

EDITOR_OPT=('-u' "$HOME/.config/nvim/writing_init.vim")
DATA_FILE="$HOME/secret"
DATE_DATA_FILE="$DATA_FILE/daily"
run_ecryptfs_mount=0
IN_FILE=0

if [[ ! -f "$HOME/secret/I_AM_A_SECRET" ]]; then
    run_ecryptfs_mount=1
fi

while [[ -n "$1" ]]; do
    case "$1" in
        -E|--editor-opt)
            shift
            EDITOR_OPT+=("$1")
            ;;
        -i)
            IN_FILE=1
            ;;
    esac
    shift
done

password_msg() {
printf "%bno secret fs mounted%b" "\\033[31m" "\\033[0m"
cat << __EOF__
A user password is needed to unwrapp the ecryptfs password,
so it can bo loaded in to the kernel key ring.

then the key signature needs to be add to user file

just follow the instructions

pleas enter the user password
__EOF__
}

instert_password() {
    local user_passwd

    password_msg
    read -resp '--> ' user_passwd

    printf "%s" "$user_passwd" | \
        ecryptfs-insert-wrapped-passphrase-into-keyring \
        /home/chris/.ecryptfs/wrapped-passphrase - || return 1
    unset user_passwd
    return 0
}

insert_sig() {
    local key_sig

    printf "\\nenter the key signature from above \\n"
    read -resp '--> ' key_sig

    echo -e "${key_sig}\\n${key_sig}" > "$HOME/.ecryptfs/secret.sig" || \
        return 1
    unset key_sig
    return 0
}

mount_ecryptfs() {
    printf "running %b mount.ecryptfs_private%b%b secret %b \\n" \
        "\\033[32m" "\\033[0m" "\\033[1m" "\\033[0m"

    mount.ecryptfs_private secret
}

update_keyring() {
    if instert_password && insert_sig; then
        printf "\\n\\ndone and no errors I guess \\n"
        mount_ecryptfs
    else
        printf "idk but something is fucked \\n"
    fi
}


open_day_file() {
    local date_file

    date_file="${DATE_DATA_FILE}/$(date +%a_%F).txt"

    if [[ ! -f "$date_file" ]]; then
        printf "making file %s \\n" "date_file"
        printf "today is %s \\n" "$(date '+%a %F')" > "$date_file"
    fi

    "$EDITOR" "${EDITOR_OPT[@]}" "$date_file"
}

open_in_file() {
    local local_in_file

    local_in_file="$DATA_FILE/in.txt"

    if [[ ! -f "$local_in_file" ]]; then
        printf "* In File\\n\\n" > "$local_in_file"
    fi

    "$EDITOR" "${EDITOR_OPT[@]}" "$local_in_file"
}

main() {
    [[ -d "$DATA_FILE" ]] || mkdir "$DATA_FILE"


    if ((run_ecryptfs_mount)); then
        update_keyring
    fi

    if ((IN_FILE)); then
        open_in_file
    else
        open_day_file
    fi
}

main
